|main
KEY[0] => _.IN1
KEY[0] => _.IN1
KEY[0] => _.IN1
KEY[0] => _.IN1
KEY[0] => _.IN1
KEY[0] => _.IN1
KEY[0] => _.IN1
KEY[0] => _.IN1
SW[0] => SW[0].IN8
SW[1] => SW[1].IN1
HEX0[0] <= seg7_HEX:hex0.HEX_display
HEX0[1] <= seg7_HEX:hex0.HEX_display
HEX0[2] <= seg7_HEX:hex0.HEX_display
HEX0[3] <= seg7_HEX:hex0.HEX_display
HEX0[4] <= seg7_HEX:hex0.HEX_display
HEX0[5] <= seg7_HEX:hex0.HEX_display
HEX0[6] <= seg7_HEX:hex0.HEX_display
HEX1[0] <= seg7_HEX:hex1.HEX_display
HEX1[1] <= seg7_HEX:hex1.HEX_display
HEX1[2] <= seg7_HEX:hex1.HEX_display
HEX1[3] <= seg7_HEX:hex1.HEX_display
HEX1[4] <= seg7_HEX:hex1.HEX_display
HEX1[5] <= seg7_HEX:hex1.HEX_display
HEX1[6] <= seg7_HEX:hex1.HEX_display


|main|T_flip_flop:u0
T => Q~reg0.ENA
clk => Q~reg0.CLK
clear => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main|T_flip_flop:u1
T => Q~reg0.ENA
clk => Q~reg0.CLK
clear => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main|T_flip_flop:u2
T => Q~reg0.ENA
clk => Q~reg0.CLK
clear => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main|T_flip_flop:u3
T => Q~reg0.ENA
clk => Q~reg0.CLK
clear => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main|T_flip_flop:u4
T => Q~reg0.ENA
clk => Q~reg0.CLK
clear => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main|T_flip_flop:u5
T => Q~reg0.ENA
clk => Q~reg0.CLK
clear => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main|T_flip_flop:u6
T => Q~reg0.ENA
clk => Q~reg0.CLK
clear => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main|T_flip_flop:u7
T => Q~reg0.ENA
clk => Q~reg0.CLK
clear => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main|seg7_HEX:hex0
data[3] => HEX_display.IN1
data[3] => HEX_display.IN1
data[3] => HEX_display.IN1
data[3] => HEX_display.IN1
data[3] => HEX_display.IN1
data[3] => HEX_display.IN1
data[3] => HEX_display.IN1
data[3] => HEX_display.IN1
data[3] => HEX_display.IN1
data[3] => HEX_display.IN1
data[3] => HEX_display.IN1
data[3] => HEX_display.IN1
data[3] => HEX_display.IN1
data[3] => HEX_display.IN1
data[3] => HEX_display.IN1
data[2] => HEX_display.IN1
data[2] => HEX_display.IN1
data[2] => HEX_display.IN1
data[2] => HEX_display.IN1
data[2] => HEX_display.IN1
data[2] => HEX_display.IN1
data[2] => HEX_display.IN1
data[2] => HEX_display.IN1
data[1] => HEX_display.IN0
data[1] => HEX_display.IN0
data[1] => HEX_display.IN0
data[1] => HEX_display.IN0
data[0] => HEX_display.IN1
data[0] => HEX_display.IN1
data[0] => HEX_display.IN1
data[0] => HEX_display.IN1
HEX_display[0] <= HEX_display.DB_MAX_OUTPUT_PORT_TYPE
HEX_display[1] <= HEX_display.DB_MAX_OUTPUT_PORT_TYPE
HEX_display[2] <= HEX_display.DB_MAX_OUTPUT_PORT_TYPE
HEX_display[3] <= HEX_display.DB_MAX_OUTPUT_PORT_TYPE
HEX_display[4] <= HEX_display.DB_MAX_OUTPUT_PORT_TYPE
HEX_display[5] <= HEX_display.DB_MAX_OUTPUT_PORT_TYPE
HEX_display[6] <= HEX_display.DB_MAX_OUTPUT_PORT_TYPE


|main|seg7_HEX:hex1
data[3] => HEX_display.IN1
data[3] => HEX_display.IN1
data[3] => HEX_display.IN1
data[3] => HEX_display.IN1
data[3] => HEX_display.IN1
data[3] => HEX_display.IN1
data[3] => HEX_display.IN1
data[3] => HEX_display.IN1
data[3] => HEX_display.IN1
data[3] => HEX_display.IN1
data[3] => HEX_display.IN1
data[3] => HEX_display.IN1
data[3] => HEX_display.IN1
data[3] => HEX_display.IN1
data[3] => HEX_display.IN1
data[2] => HEX_display.IN1
data[2] => HEX_display.IN1
data[2] => HEX_display.IN1
data[2] => HEX_display.IN1
data[2] => HEX_display.IN1
data[2] => HEX_display.IN1
data[2] => HEX_display.IN1
data[2] => HEX_display.IN1
data[1] => HEX_display.IN0
data[1] => HEX_display.IN0
data[1] => HEX_display.IN0
data[1] => HEX_display.IN0
data[0] => HEX_display.IN1
data[0] => HEX_display.IN1
data[0] => HEX_display.IN1
data[0] => HEX_display.IN1
HEX_display[0] <= HEX_display.DB_MAX_OUTPUT_PORT_TYPE
HEX_display[1] <= HEX_display.DB_MAX_OUTPUT_PORT_TYPE
HEX_display[2] <= HEX_display.DB_MAX_OUTPUT_PORT_TYPE
HEX_display[3] <= HEX_display.DB_MAX_OUTPUT_PORT_TYPE
HEX_display[4] <= HEX_display.DB_MAX_OUTPUT_PORT_TYPE
HEX_display[5] <= HEX_display.DB_MAX_OUTPUT_PORT_TYPE
HEX_display[6] <= HEX_display.DB_MAX_OUTPUT_PORT_TYPE


